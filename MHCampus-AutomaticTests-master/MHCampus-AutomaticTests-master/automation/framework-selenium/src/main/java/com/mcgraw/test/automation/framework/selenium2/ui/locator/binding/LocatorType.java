//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.26 at 04:53:51 AM VET 
//


package com.mcgraw.test.automation.framework.selenium2.ui.locator.binding;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TypeOfLocatorType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TypeOfLocatorType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Css"/>
 *     &lt;enumeration value="XPath"/>
 *     &lt;enumeration value="Id"/>
 *     &lt;enumeration value="LinkText"/>
 *     &lt;enumeration value="PartialLinkText"/>
 *     &lt;enumeration value="NameAttribute"/>
 *     &lt;enumeration value="TagName"/>
 *     &lt;enumeration value="ClassName"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "TypeOfLocatorType")
@XmlEnum
public enum LocatorType {

    @XmlEnumValue("Css")
    CSS("Css"),
    @XmlEnumValue("XPath")
    X_PATH("XPath"),
    @XmlEnumValue("Id")
    ID("Id"),
    @XmlEnumValue("LinkText")
    LINK_TEXT("LinkText"),
    @XmlEnumValue("PartialLinkText")
    PARTIAL_LINK_TEXT("PartialLinkText"),
    @XmlEnumValue("NameAttribute")
    NAME_ATTRIBUTE("NameAttribute"),
    @XmlEnumValue("TagName")
    TAG_NAME("TagName"),
    @XmlEnumValue("ClassName")
    CLASS_NAME("ClassName");
    private final String value;

    LocatorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LocatorType fromValue(String v) {
        for (LocatorType c: LocatorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
